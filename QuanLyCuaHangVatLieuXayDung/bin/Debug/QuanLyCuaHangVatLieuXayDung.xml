<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuanLyCuaHangVatLieuXayDung</name>
    </assembly>
    <members>
        <member name="M:QuanLyCuaHangVatLieuXayDung.config.FormApp.SetUp">
            <summary>
            The SetUp method creates required directories based on predefined paths.
            It checks whether each directory exists and creates it if it does not.
            </summary>
            <remarks>
            The following directories are processed:
            - CUAHANGXAYDUNG_DATA: Directory for construction store data.
            - VATLIEU_DATA: Directory for material data.
            - DOITAC_DATA: Directory for partner data.
            - TAIKHOAN_DATA: Directory for account data.
            If a directory already exists or the path is invalid, a debug message is logged.
            </remarks>
            <exception cref="T:System.Exception">Throws an exception if an error occurs during directory creation.</exception>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.config.FormApp.GetConnectionString">
            <summary>
            The GetConnectionString method generates and returns the SQL Server connection string 
            based on the configured properties.
            </summary>
            <returns>
            A connection string in the format:
            "Data Source=&lt;ServerName&gt;;Initial Catalog=&lt;DatabaseName&gt;;User ID=&lt;UserName&gt;;Password=&lt;Password&gt;"
            </returns>
            <remarks>
            The following properties must be set before calling this method:
            - DATA_SOURCE: Name or address of the SQL Server.
            - DATABASE: Name of the target database.
            - USER_ID: SQL Server login username.
            - PASSWORD: Corresponding password for the USER_ID.
            </remarks>
        </member>
        <member name="T:QuanLyCuaHangVatLieuXayDung.model.ChiTiet">
            <summary>
            model ChiTiet đại diện cho quan hệ ChiTietHoaDon và ChiTietTraHang trong database
            ChiTiet là một lớp dùng để lưu trữ thông tin chi tiết của một hóa đơn hoặc phiếu trả hàng.
            Thông tin chi tiết bao gồm vật liệu (VatLieu) và số lượng vật liệu (float).
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.model.VatLieu.GetDanhSachHinhAnhVatLieus">
            <summary>
            Gets a list of image file paths in the specified folder.
            </summary>
            <returns>
            A list of full file paths for image files (e.g., .jpg, .jpeg, .png, .bmp, .gif) found in the folder.
            If the folder does not exist or an error occurs, returns an empty list.
            </returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.service.IPhieuGhiNoService.searchByKey(System.String)">
            <returns>Danh sách phiếu ghi nợ khớp với từ khóa</returns>
        </member>
        <member name="T:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility">
            <summary>
            Utilities related to file
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.CreateFolder(System.String)">
            <summary>
            Creates a new folder at the specified path if it does not already exist.
            </summary>
            <param name="folderPath">The full path of the folder to create.</param>
            <returns>
            Returns <c>true</c> if the folder was created;
            <c>false</c> if the folder already exists.
            </returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.GetImagePathsFromFolder(System.String)">
            <summary>
            Retrieves a list of image file paths from a specified folder.
            Supports file extensions: .jpg, .jpeg, .png, .bmp, .gif.
            </summary>
            <param name="folderPath">The path of the folder to search for image files.</param>
            <returns>A list of full image file paths found in the folder.</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.SaveImages(System.String,System.String)">
            <summary>
            Saves an image file to a specified target folder. If the folder does not exist, it will be created.
            </summary>
            <param name="hinhAnhPath">The full path of the image file to be copied.</param>
            <param name="targetFolder">The destination folder where the image should be saved.</param>
            <remarks>
            This method checks whether the target folder exists and creates it if necessary.  
            Then it attempts to copy the image file to the folder, overwriting it if a file with the same name already exists.  
            Debug messages are written to help trace the execution flow and potential errors.
            </remarks>
            <example>
            <code>
            SaveImages(@"C:\Images\sample.jpg", @"C:\Backup\Images");
            </code>
            </example>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.DeleteFolder(System.String)">
            <summary>
            Deletes a folder at the specified path along with all its contents.
            </summary>
            <param name="folderPath">The full path of the folder to delete.</param>
            <returns>
            Returns <c>true</c> if the folder was successfully deleted;
            <c>false</c> if the folder does not exist or an error occurs during deletion.
            </returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.DeleteFile(System.String)">
            <summary>
            Deletes a file at the specified path if it exists.
            </summary>
            <param name="filePath">The full path of the file to delete.</param>
            <returns>
            Returns <c>true</c> if the file was successfully deleted; 
            <c>false</c> if the file does not exist or an error occurs during deletion.
            </returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.WriteObjectJsonFile``1(``0,System.String)">
            <summary>
            Overwrites a JSON file with a single object wrapped in a "Data" property.
            </summary>
            <typeparam name="T">The type of the object to be serialized and written to the JSON file.</typeparam>
            <param name="obj">The object instance to serialize and write to the JSON file.</param>
            <param name="filePath">The full path of the JSON file to be written, including the file name and extension.</param>
            <returns>
            Returns <c>true</c> if the operation completes successfully; otherwise, <c>false</c> if an error occurs.
            </returns>
            <remarks>
            If the directory does not exist, it will be created automatically.
            The object will be serialized as a JSON array containing one item with a "Data" property.
            The method will overwrite the entire file content regardless of any existing data.
            The resulting JSON is formatted with indentation for readability.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.AppendObjectJsonFile``1(``0,System.String)">
            <summary>
            Appends an object to a JSON file at the specified path, or creates a new file if it doesn't exist.
            </summary>
            <typeparam name="T">The type of the object to be serialized and written to the JSON file.</typeparam>
            <param name="obj">The object instance to serialize and add to the JSON file.</param>
            <param name="filePath">The full file path where the JSON file will be saved, including the file name and extension.</param>
            <returns>
            Returns <c>true</c> if the operation is successful; otherwise, returns <c>false</c> if an error occurs.
            </returns>
            <remarks>
            If the directory of the file does not exist, it will be created automatically.
            The object will be wrapped in a parent object with a "Data" property before being serialized.
            If the file already exists and contains a valid JSON array, the object will be added to the array.
            If the file is empty or invalid, it will be overwritten with the new object.
            The JSON output will be indented for readability.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.RemoveObjectFromJsonFile``1(System.String,System.Func{System.Text.Json.JsonElement,System.Boolean})">
            <summary>
            Removes objects from a JSON file based on a specified condition defined by a predicate.
            </summary>
            <typeparam name="T">The type of the object that is being removed.</typeparam>
            <param name="filePath">The full path to the JSON file from which objects will be removed.</param>
            <param name="matchPredicate">A delegate (Func) that defines the condition to match objects for removal. It is applied to the "Data" property of each object.</param>
            <returns>
            Returns <c>true</c> if matching objects were removed successfully; otherwise, returns <c>false</c> if no objects were removed or an error occurred.
            </returns>
            <remarks>
            This method reads the JSON file, deserializes it into a list of JSON elements, and removes entries that satisfy the provided predicate.
            If no matching entries are found, a warning is logged. The updated JSON content is then written back to the file.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.UpdateObjectInJsonFileById``1(``0,System.String,System.Func{System.Text.Json.JsonElement,System.Boolean})">
            <summary>
            Updates an object inside a JSON file based on a custom matching condition.
            </summary>
            <typeparam name="T">The type of the object to be updated.</typeparam>
            <param name="objToUpdate">The new object that will replace the existing matching object in the file.</param>
            <param name="filePath">The path to the JSON file containing a list of objects.</param>
            <param name="matchPredicate">
            A delegate function that defines the matching condition. 
            It takes a <see cref="T:System.Text.Json.JsonElement"/> representing the "Data" object from each entry in the JSON array.
            Returns <c>true</c> if the entry matches the object to update.
            </param>
            <returns>
            Returns <c>true</c> if the object was found and successfully updated; otherwise, returns <c>false</c>.
            </returns>
            <remarks>
            The JSON file is expected to contain an array of objects, where each object has a property named <c>"Data"</c>.
            The method deserializes the JSON array, searches for the entry where the <paramref name="matchPredicate"/> returns true,
            and replaces that entry with the updated object.
            Uses <see cref="N:System.Text.Json"/> for serialization and deserialization.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.IsExistsObjectInJsonFile``1(System.String,System.Func{System.Text.Json.JsonElement,System.Boolean})">
            <summary>
            Checks if an object exists in a JSON file based on a specified predicate for the object's properties.
            </summary>
            <param name="filePath">The full path of the JSON file to check.</param>
            <param name="matchPredicate">A function that defines the condition to match against properties inside the "Data" field of each entry.</param>
            <returns>
            Returns <c>true</c> if the object matching the predicate is found in the JSON file; otherwise, returns <c>false</c> if not found or an error occurs.
            </returns>
            <remarks>
            This method deserializes the JSON file into a list of objects, checks each object’s "Data" property against the provided predicate, 
            and returns <c>true</c> if a match is found. If no match is found, it returns <c>false</c>.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.ReadObjectsFromJsonFile``1(System.String)">
            <summary>
            Reads a JSON file and deserializes its content into a list of objects of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of objects to deserialize from the JSON file.</typeparam>
            <param name="filePath">The full path to the JSON file.</param>
            <returns>
            A list of objects of type <typeparamref name="T"/>.
            If the file does not exist or an error occurs, an empty list is returned.
            </returns>
            <remarks>
            The method assumes that the JSON file contains an array of objects,
            each having a property named "Data" that holds the actual object data.
            Example of expected JSON format:
            [
                { "Data": { "Id": 1, "Name": "Item 1" } },
                { "Data": { "Id": 2, "Name": "Item 2" } }
            ]
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.IsFileExists(System.String)">
            <summary>
            Checks whether a file exists at the specified file path.
            </summary>
            <param name="filePath">The path of the file to check.</param>
            <returns>True if the file exists; otherwise, false.</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.IsFileInFolder(System.String,System.String)">
            <summary>
            Checks whether a specified file is located within a given folder, including any of its subdirectories.
            </summary>
            <param name="filePath">The full or relative path of the file to check.</param>
            <param name="folderPath">The full or relative path of the folder to check against.</param>
            <returns>
            Returns <c>true</c> if the file is located inside the specified folder or any of its subfolders;
            otherwise, returns <c>false</c>.
            </returns>
            <remarks>
            The method converts both <paramref name="filePath"/> and <paramref name="folderPath"/> to their
            absolute (full) paths before comparison.
            A directory separator character is appended to the end of the folder path if it is not already present
            to avoid incorrect partial matching.
            If an exception occurs (e.g., invalid path), the method catches it and returns <c>false</c>.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.DeleteAllFilesInFolder(System.String)">
            <summary>
            Deletes all files inside the specified folder.
            </summary>
            <param name="folderPath">The path to the folder whose files should be deleted.</param>
            <returns>
            Returns <c>true</c> if all files were deleted successfully (or folder is empty); 
            returns <c>false</c> if the folder doesn't exist or an error occurred.
            </returns>
            <remarks>
            This method only deletes files directly inside the specified folder.
            It does not delete subdirectories or their contents.
            </remarks>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.FolderExists(System.String)">
            <summary>
            Checks whether a specified folder exists at the given path.
            </summary>
            <param name="folderPath">The full path of the folder to check.</param>
            <returns>True if the folder exists; otherwise, false.</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.FileUtility.CopyAndRenameFile(System.String,System.String,System.String)">
            <summary>
            Copies a file to a specified destination folder and renames it with a new file name.
            </summary>
            <param name="sourceFilePath">The full path to the source file that needs to be copied.</param>
            <param name="destinationFolder">The full path to the destination folder where the file will be copied.</param>
            <param name="newFileName">The new name for the copied file, including the file extension (e.g., "newfile.txt").</param>
            <returns>
            Returns the full path to the newly copied and renamed file if successful.
            Returns an empty string if the copy or rename operation fails.
            </returns>
        </member>
        <member name="T:QuanLyCuaHangVatLieuXayDung.utilities.MyDatabase">
            <summary>
            Perform connection with your database
            </summary>
        </member>
        <member name="T:QuanLyCuaHangVatLieuXayDung.utilities.StringUtility">
            <summary>
            Utilities related to String data type
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.StringUtility.ConvertToVietnameseCurrency(System.Double)">
            <summary>
            Converts a numeric amount to a Vietnamese currency string format.
            </summary>
            <param name="amount">The numeric amount to convert.</param>
            <returns>A formatted string representing the amount in Vietnamese Dong (VNĐ).</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.StringUtility.ConvertFromVietnameseCurrency(System.String)">
            <summary>
            Converts a Vietnamese currency string format back to a numeric amount.
            </summary>
            <param name="currencyString">The currency string to convert (e.g., "1,000,000 VNĐ").</param>
            <returns>A numeric value representing the amount.</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.utilities.StringUtility.GenerateRandomString(System.Int32)">
            <summary>
            Generates a random alphanumeric string of the specified length.
            </summary>
            <param name="length">The desired length of the generated string.</param>
            <returns>A random string consisting of uppercase letters, lowercase letters, and digits.</returns>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_BienLaiTraNo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_BienLaiTraNo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_BienLaiTraNo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_ChiPhiPhatSinh.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChiPhiPhatSinh.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChiPhiPhatSinh.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_ChiTietVatlieu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChiTietVatlieu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChiTietVatlieu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_ChonDoiTac.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChonDoiTac.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChonDoiTac.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_ChonSoLuongVatLieu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChonSoLuongVatLieu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_ChonSoLuongVatLieu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_DoiTac.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_DoiTac.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_DoiTac.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_LichSuGiaoDich.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_LichSuGiaoDich.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_LichSuGiaoDich.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_NhanVien.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_NhanVien.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_NhanVien.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_PhieuGhiNo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_PhieuGhiNo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_PhieuGhiNo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_SelectVatLieu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_SelectVatLieu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_SelectVatLieu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_TaoDoiTacMoi.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TaoDoiTacMoi.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TaoDoiTacMoi.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_TaoVatLieuMoi.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TaoVatLieuMoi.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TaoVatLieuMoi.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_TraHang.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TraHang.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TraHang.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_TrangChu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TrangChu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_TrangChu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_GiaoDich.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_GiaoDich.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_GiaoDich.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.Form_VatLieu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_VatLieu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.Form_VatLieu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.UserControlShowVatLieu.ShowVatLieu(System.Byte)">
            <summary>
            Hiển thị thông tin về vật liệu lên giao diện người dùng.
            </summary>
            <param name="loaiVatLieu">
            Loại vật liệu cần hiển thị: 
            - 1: Hiển thị giá xuất.
            - 2: Hiển thị giá nhập.
            </param>
            <remarks>
            Hàm sẽ hiển thị thông tin gồm: 
            - Tên vật liệu (VatLieu.Ten).
            - Số lượng tồn kho (TonKhos, nếu có).
            - Giá xuất hoặc giá nhập, tùy thuộc vào tham số loaiVatLieu.
            </remarks>
        </member>
        <member name="F:QuanLyCuaHangVatLieuXayDung.views.UserControlShowVatLieu.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.UserControlShowVatLieu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:QuanLyCuaHangVatLieuXayDung.views.UserControlShowVatLieu.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:QuanLyCuaHangVatLieuXayDung.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.left_arrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.minus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.right_arrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:QuanLyCuaHangVatLieuXayDung.Properties.Resources.vatLieu_NULL">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
